// Mocks generated by Mockito 5.4.0 from annotations
// in api_tools_test/test/model/data_source/remote/retrofit/cat_remote_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:api_tools_test/model/cat_image/cat_image.dart' as _i4;
import 'package:api_tools_test/model/data_source/remote/retrofit/cat_remote.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CatRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatRemote extends _i1.Mock implements _i2.CatRemote {
  @override
  _i3.Future<List<_i4.CatImage>> getImages({
    required int? limit,
    int? page = 10,
    String? order = r'RAND',
    bool? hasBreeds = true,
    String? breadIds = r'',
    String? categoryIds = r'',
    String? subId = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImages,
          [],
          {
            #limit: limit,
            #page: page,
            #order: order,
            #hasBreeds: hasBreeds,
            #breadIds: breadIds,
            #categoryIds: categoryIds,
            #subId: subId,
          },
        ),
        returnValue: _i3.Future<List<_i4.CatImage>>.value(<_i4.CatImage>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.CatImage>>.value(<_i4.CatImage>[]),
      ) as _i3.Future<List<_i4.CatImage>>);
}
