// Mocks generated by Mockito 5.4.0 from annotations
// in api_tools_test/test/model/data_source/remote/retrofit/post_remote_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:api_tools_test/model/data_module.dart' as _i6;
import 'package:api_tools_test/model/data_source/remote/retrofit/retrofit_services.dart'
    as _i8;
import 'package:api_tools_test/model/entities/post_model.dart' as _i5;
import 'package:api_tools_test/model/services/database.dart' as _i2;
import 'package:api_tools_test/model/services/dio_services.dart' as _i4;
import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppDatabase_0 extends _i1.SmartFake implements _i2.AppDatabase {
  _FakeAppDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_1 extends _i1.SmartFake implements _i3.Dio {
  _FakeDio_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDioService_2 extends _i1.SmartFake implements _i4.DioService {
  _FakeDioService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePost_3 extends _i1.SmartFake implements _i5.Post {
  _FakePost_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DataModule].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataModule extends _i1.Mock implements _i6.DataModule {
  MockDataModule() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.AppDatabase> get logDatabase => (super.noSuchMethod(
        Invocation.getter(#logDatabase),
        returnValue: _i7.Future<_i2.AppDatabase>.value(_FakeAppDatabase_0(
          this,
          Invocation.getter(#logDatabase),
        )),
      ) as _i7.Future<_i2.AppDatabase>);
  @override
  String get catBaseURL => (super.noSuchMethod(
        Invocation.getter(#catBaseURL),
        returnValue: '',
      ) as String);
  @override
  String get pokemonBaseURL => (super.noSuchMethod(
        Invocation.getter(#pokemonBaseURL),
        returnValue: '',
      ) as String);
  @override
  String get baseURL1 => (super.noSuchMethod(
        Invocation.getter(#baseURL1),
        returnValue: '',
      ) as String);
  @override
  String get baseURL2 => (super.noSuchMethod(
        Invocation.getter(#baseURL2),
        returnValue: '',
      ) as String);
  @override
  String get linhtinhBaseURL1 => (super.noSuchMethod(
        Invocation.getter(#linhtinhBaseURL1),
        returnValue: '',
      ) as String);
  @override
  Map<String, dynamic> get conCungHeaders1 => (super.noSuchMethod(
        Invocation.getter(#conCungHeaders1),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, dynamic> get conCungHeaders2 => (super.noSuchMethod(
        Invocation.getter(#conCungHeaders2),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i3.Dio getCatDio(String? url) => (super.noSuchMethod(
        Invocation.method(
          #getCatDio,
          [url],
        ),
        returnValue: _FakeDio_1(
          this,
          Invocation.method(
            #getCatDio,
            [url],
          ),
        ),
      ) as _i3.Dio);
  @override
  _i3.Dio getLinhTinhDio(String? url) => (super.noSuchMethod(
        Invocation.method(
          #getLinhTinhDio,
          [url],
        ),
        returnValue: _FakeDio_1(
          this,
          Invocation.method(
            #getLinhTinhDio,
            [url],
          ),
        ),
      ) as _i3.Dio);
  @override
  _i3.Dio getDio1(
    String? url,
    Map<String, dynamic>? headers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDio1,
          [
            url,
            headers,
          ],
        ),
        returnValue: _FakeDio_1(
          this,
          Invocation.method(
            #getDio1,
            [
              url,
              headers,
            ],
          ),
        ),
      ) as _i3.Dio);
  @override
  _i3.Dio getDio2(
    String? url,
    Map<String, dynamic>? headers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDio2,
          [
            url,
            headers,
          ],
        ),
        returnValue: _FakeDio_1(
          this,
          Invocation.method(
            #getDio2,
            [
              url,
              headers,
            ],
          ),
        ),
      ) as _i3.Dio);
  @override
  _i4.DioService getDioService1(_i3.Dio? dio) => (super.noSuchMethod(
        Invocation.method(
          #getDioService1,
          [dio],
        ),
        returnValue: _FakeDioService_2(
          this,
          Invocation.method(
            #getDioService1,
            [dio],
          ),
        ),
      ) as _i4.DioService);
  @override
  _i3.Dio dio(
    String? url,
    Map<String, dynamic>? headers,
    _i3.Interceptor? dioIntercepter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #dio,
          [
            url,
            headers,
            dioIntercepter,
          ],
        ),
        returnValue: _FakeDio_1(
          this,
          Invocation.method(
            #dio,
            [
              url,
              headers,
              dioIntercepter,
            ],
          ),
        ),
      ) as _i3.Dio);
}

/// A class which mocks [PostRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRemote extends _i1.Mock implements _i8.PostRemote {
  MockPostRemote() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Post> getPostById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getPostById,
          [id],
        ),
        returnValue: _i7.Future<_i5.Post>.value(_FakePost_3(
          this,
          Invocation.method(
            #getPostById,
            [id],
          ),
        )),
      ) as _i7.Future<_i5.Post>);
  @override
  _i7.Future<List<_i5.Post>> getPosts() => (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i7.Future<List<_i5.Post>>.value(<_i5.Post>[]),
      ) as _i7.Future<List<_i5.Post>>);
  @override
  _i7.Future<_i5.Post> addPost(_i5.Post? post) => (super.noSuchMethod(
        Invocation.method(
          #addPost,
          [post],
        ),
        returnValue: _i7.Future<_i5.Post>.value(_FakePost_3(
          this,
          Invocation.method(
            #addPost,
            [post],
          ),
        )),
      ) as _i7.Future<_i5.Post>);
  @override
  _i7.Future<_i5.Post> updatePost(
    _i5.Post? json,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePost,
          [
            json,
            id,
          ],
        ),
        returnValue: _i7.Future<_i5.Post>.value(_FakePost_3(
          this,
          Invocation.method(
            #updatePost,
            [
              json,
              id,
            ],
          ),
        )),
      ) as _i7.Future<_i5.Post>);
  @override
  _i7.Future<_i5.Post> deletePost(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deletePost,
          [id],
        ),
        returnValue: _i7.Future<_i5.Post>.value(_FakePost_3(
          this,
          Invocation.method(
            #deletePost,
            [id],
          ),
        )),
      ) as _i7.Future<_i5.Post>);
  @override
  _i7.Future<List<_i5.Post>> filterByUserId(int? userId) => (super.noSuchMethod(
        Invocation.method(
          #filterByUserId,
          [userId],
        ),
        returnValue: _i7.Future<List<_i5.Post>>.value(<_i5.Post>[]),
      ) as _i7.Future<List<_i5.Post>>);
}
